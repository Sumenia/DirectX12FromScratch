SET(OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)

FILE(GLOB_RECURSE SOURCES_D3D12_ENGINE ./src/*.cpp)

FILE(GLOB_RECURSE HEADERS_D3D12_ENGINE ./include/*.h)

ADD_EXECUTABLE(D3D12Engine ${SOURCES_D3D12_ENGINE} ${HEADERS_D3D12_ENGINE})

TARGET_LINK_LIBRARIES(D3D12Engine assimp d3dcompiler dxgi d3d12)

TARGET_INCLUDE_DIRECTORIES(D3D12Engine PUBLIC ./include/)

ADD_DEPENDENCIES(D3D12Engine WINDOW_SFML)

set_property(TARGET D3D12Engine PROPERTY RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set_property(TARGET D3D12Engine PROPERTY LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set_property(TARGET D3D12Engine PROPERTY ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR})
foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
  string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
  set_property(TARGET D3D12Engine PROPERTY RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OUTPUT_DIR})
  set_property(TARGET D3D12Engine PROPERTY LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OUTPUT_DIR})
  set_property(TARGET D3D12Engine PROPERTY ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OUTPUT_DIR})
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

install(DIRECTORY ${PROJECT_SOURCE_DIR}/DirectX12FromScratch/Assets DESTINATION ${OUTPUT_DIR})
if (MSVC)
create_default_target_launcher(D3D12Engine
	FORWARD_ARGS
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
create_target_launcher(D3D12Engine
	FORWARD_ARGS
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
  SET(DIRS ${ASSIMP_BINARY_DIR} ${SFML_BINARY_DIR})
  install(CODE "include(BundleUtilities)
          FIXUP_BUNDLE(\"${PROJECT_BINARY_DIR}/bin/D3D12Engine.exe\" \"${OUTPUT_DIR}/WINDOW_SFML.dll\" \"${DIRS}\")")
endif ()